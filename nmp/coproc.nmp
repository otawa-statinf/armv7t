op coproc = STC | LDC_imm | MRC_MRC2

op STC(x: STC_list)
	syntax = x.syntax
	image = x.image
	action = {
		// TODO
	}

op STC_list = STC_T1 | STC_T2

op STC_T1(D: bool, CRd: card(4), coproc: enum(0..9, 12..15), addr: CoproAddress)
	syntax = format("stc%s %d, %d, %s", if D then "l" else "" endif, UInt(coproc), CRd, addr)
	image = format("1110 110 %1b %1b %1b %1b 0 %4b %4b %4b %8b", addr.P, addr.U, D, addr.W, addr.Rn, CRd, coproc, addr.imm8)  
	// if P == '0' && U == '0' && D == '0' && W == '0' then UNDEFINED;
	// if P == '0' && U == '0' && D == '1' && W == '0' then SEE MCRR, MCRR2;
	n = UInt(addr.Rn)
	cp = UInt(coproc)
	imm32 = ZeroExtend(addr.imm8 :: 0b00, 32)
	index = addr.P
	add = addr.U
	wback = addr.W
	// if n == 15 then UNPREDICTABLE

op STC_T2(N: bool, CRd: card(4), coproc: enum(0..9, 12..15), addr: CoproAddress)
	syntax = format("stc2%s %d, %d, %s", if N then "l" else "" endif, UInt(coproc), CRd, addr)
	image = format("1111 110 %1b %1b %1b %1b 0 %4b %4b %4b %8b", addr.P, addr.U, N, addr.W, addr.Rn, CRd, coproc, addr.imm8)  
	// if P == '0' && U == '0' && D == '0' && W == '0' then UNDEFINED;
	// if P == '0' && U == '0' && D == '1' && W == '0' then SEE MCRR, MCRR2;
	n = UInt(addr.Rn)
	cp = UInt(coproc)
	imm32 = ZeroExtend(addr.imm8 :: 0b00, 32)
	index = addr.P
	add = addr.U
	wback = addr.W
	// if n == 15 then UNPREDICTABLE


op LDC_imm(x: LDC_imm_list)
	syntax = x.syntax
	image = x.image
	cond = x.cond
	action = {
		// TODO
		//if ConditionPassed() then
		//	if !Coproc_Accepted(cp, ThisInstr()) then
		//		GenerateCoprocessorException();
		//	else
		//		NullCheckIfThumbEE(n);
		//		offset_addr = if add then (R[n] + imm32) else (R[n] - imm32);
		//		address = if index then offset_addr else R[n];
		//		repeat
		//			Coproc_SendLoadedWord(MemA[address,4], cp, ThisInstr());
		//			address = address + 4;
		//		until Coproc_DoneLoading(cp, ThisInstr());
		//		if wback then R[n] = offset_addr;
	}

op LDC_imm_list = LDC_imm_T1 | LDC_imm_T2

op LDC_imm_T1(D: bool, CRd: card(4), coproc: enum(0..9, 12..15), addr: CoproAddress)
	// if Rn == '1111' then SEE LDC (literal) and if W == '1' || (P == '0' && CurrentInstrSet() != InstrSet_ARM) then UNPREDICTABLE;;
	// if P == '0' && U == '0' && D == '0' && W == 0 then UNDEFINED
	// if P == '0' && U == '0' && D == '1' && W == 0 then see MRRC, MRRC2
	syntax = format("ldc%s %d, %d, %s", if D then "l" else "" endif, UInt(coproc), CRd, addr)
	image = format("1110 110 %1b %1b %1b %1b 1 %4b %4b %4b %8b", addr.P, addr.U, D, addr.W, addr.Rn, CRd, coproc, addr.imm8)  
	n = UInt(addr.Rn)
	cp = UInt(coproc)
	imm32 = ZeroExtend(addr.imm8 :: 0b00, 32)
	index = addr.P
	add = addr.U
	wback = addr.W
	cond = 1

op LDC_imm_T2(N: bool, CRd: card(4), coproc: card(4), addr: CoproAddress)
	// if Rn == '1111' then SEE LDC (literal) and if W == '1' || (P == '0' && CurrentInstrSet() != InstrSet_ARM) then UNPREDICTABLE;;
	// if P == '0' && U == '0' && D == '0' && W == 0 then UNDEFINED
	// if P == '0' && U == '0' && D == '1' && W == 0 then see MRRC, MRRC2
	syntax = format("ldc2%s %d, %d, %s", if N then "l" else "" endif, coproc, CRd, addr)
	image = format("1111 110 %1b %1b %1b %1b 1 %4b %4b %4b %8b", addr.P, addr.U, N, addr.W, addr.Rn, CRd, coproc, addr.imm8)  
	n = UInt(addr.Rn)
	cp = UInt(coproc)
	imm32 = ZeroExtend(addr.imm8 :: 0b00, 32)
	index = addr.P
	add = addr.U
	wback = addr.W
	cond = 1

op MRC_MRC2(x: MRC_MRC2_list)
	syntax = x.syntax
	image = x.image
	action = {
		// TODO
		//if ConditionPassed() then 
		//	EncodingSpecificOperations();
		//	if !Coproc_Accepted(cp, ThisInstr()) then
		//		GenerateCoprocessorException(); 
		//	else
		//		value = Coproc_GetOneWord(cp, ThisInstr()); 
		//		if t != 15 then
		//			R[t] = value; 
		//		else
		//			APSR.N = value<31>;
		//			APSR.Z = value<30>;
		//			APSR.C = value<29>;
		//			APSR.V = value<28>;
		//			// value<27:0> are not used.
	}

op MRC_MRC2_list = MRC_T1

op MRC_T1(opc1: card(3), CRn: card(4), Rt: REG_INDEX, coproc: enum(0..9, 12..15), opc2: card(3), CRm: card(4))
	syntax = format("mrc %d, %d, %s, cr%d, cr%d, %d", UInt(coproc), opc1, Rt, CRn, CRm, opc2)
	image = format("1110 1110 %3b 1 %4b  %s %4b %3b 1 %4b", opc1, CRn, Rt, coproc, opc2, CRm)
	t = UInt(Rt)
	cp = UInt(coproc)
	//if t == 13 && (CurrentInstrSet() != InstrSet_ARM) then UNPREDICTABLE;
	
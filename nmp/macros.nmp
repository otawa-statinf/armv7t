/*
 * ARM macros.
 * Copyright (C) 2019  University of Toulouse
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

let VFPNegMul_VNMLA = 0b01
let VFPNegMul_VNMLS = 0b10
let VFPNegMul_VNMUL = 0b11

macro BigEndian() = 0
macro EncodingSpecificOperations() =

macro FPNeg_(operand) = -(operand)
macro FPAdd_(op1, op2, fpscr_controlled) = (op1) + (op2)
macro FPMul_(op1, op2, fpscr_controlled) = (op1) * (op2)

macro HavePAE() = 1

macro _ROR_(x, shift) = x >>> shift

macro SerializeVFP() =
macro UNPREDICTABLE =
macro VFPExcBarrier() =

// exceptions
macro FPProcessException(exception_, fpscr_val) =

// basic calculations
macro IsZero(x) 	= (x) == 0
macro IsOnes32(x)	= (x) == 0xFFFFFFFF


